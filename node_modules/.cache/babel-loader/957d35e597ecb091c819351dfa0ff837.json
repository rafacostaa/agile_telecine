{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/workspace/agile_telecine/src/components/Sinopse.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Icons from './Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    alignSelf: 'center'\n  },\n  cardIcons: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    backgroundColor: \"rgba(35,35,35)\"\n  },\n  cardContainer: {\n    boxShadow: 'none'\n  },\n  cardContent: {\n    backgroundColor: \"rgba(35,35,35)\",\n    color: '#F5F5F5',\n    boxShadow: 'none',\n    paddingTop: '10px'\n  }\n});\nexport default function CardCast(props) {\n  _s();\n\n  const {\n    sinopse\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.cardContainer,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.cardIcons,\n          children: [/*#__PURE__*/_jsxDEV(Icons, {\n            nameIcon: \"Add\",\n            title: \"Mi Lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            nameIcon: \"Evaluate\",\n            title: \"Evaluar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            nameIcon: \"Rec\",\n            title: \"Grabar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            nameIcon: \"Share\",\n            title: \"Compartir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 8,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.cardContent,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.cardContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"SINOPSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"inherit\",\n            component: \"p\",\n            children: sinopse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardCast, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardCast;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCast\");","map":{"version":3,"sources":["/Users/rafa/Documents/workspace/agile_telecine/src/components/Sinopse.jsx"],"names":["React","makeStyles","Typography","Card","CardContent","Grid","Icons","useStyles","container","alignSelf","cardIcons","display","justifyContent","backgroundColor","cardContainer","boxShadow","cardContent","color","paddingTop","CardCast","props","sinopse","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nimport Icons from './Icons';\n\nconst useStyles = makeStyles({\n  container: {\n    alignSelf: 'center',\n  },\n  cardIcons: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    backgroundColor: \"rgba(35,35,35)\",\n  },\n  cardContainer:{\n    boxShadow: 'none',\n  },\n  cardContent:{\n    backgroundColor: \"rgba(35,35,35)\",\n    color: '#F5F5F5',\n    boxShadow: 'none',\n    paddingTop: '10px',\n  }\n});\n\nexport default function CardCast(props) {\n  const { sinopse } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={4} className={classes.container}>\n        <Card className={classes.cardContainer}>\n          <CardContent className={classes.cardIcons}>\n            <Icons nameIcon=\"Add\" title=\"Mi Lista\" />\n            <Icons nameIcon=\"Evaluate\" title=\"Evaluar\" />\n            <Icons nameIcon=\"Rec\" title=\"Grabar\" />\n            <Icons nameIcon=\"Share\" title=\"Compartir\" />\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={8}>\n        <Card className={classes.cardContent}>\n          <CardContent className={classes.cardContent}>\n            <Typography variant=\"h6\" component=\"h2\">\n              SINOPSE\n            </Typography>\n            <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\n              {sinopse}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
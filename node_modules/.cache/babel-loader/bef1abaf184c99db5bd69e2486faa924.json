{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/workspace/agile_telecine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"./components/Footer\";\nimport SeasonsMenu from \"./components/SeasonsMenu\";\nimport useData from \"./utils/useData\";\nimport Icons from \"./components/Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  containerTitle: {\n    backgroundColor: \"rgba(50,50,50,0.7)\",\n    padding: \"10px 20px\",\n    color: \"#F5F5F5\"\n  },\n  title: {\n    fontFamily: \"Nunito\"\n  },\n  sessionMenu: {\n    height: \"600px\"\n  },\n  paperContainer: {\n    backgroundImage: ({\n      image\n    }) => `url('${image}')`,\n    backgroundSize: \"cover\",\n    height: \"100vh\"\n  }\n});\nexport default function App() {\n  _s();\n\n  const {\n    tvShows: {\n      Title,\n      Images,\n      Cast,\n      Synopsis\n    },\n    episodes\n  } = useData();\n  const image = Images && Images.Background;\n  const classes = useStyles({\n    image\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paperContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.containerTitle,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.title,\n            children: Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icons, {\n            nameIcon: \"Subtitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.sessionMenu,\n          children: /*#__PURE__*/_jsxDEV(SeasonsMenu, {\n            episodes: episodes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Footer, {\n            tvShows: {\n              Cast,\n              Synopsis\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"TLwS9pmyW1lFLVAjTyEBmovYjng=\", false, function () {\n  return [useData, useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafa/Documents/workspace/agile_telecine/src/App.js"],"names":["React","makeStyles","Typography","Grid","Paper","Footer","SeasonsMenu","useData","Icons","useStyles","containerTitle","backgroundColor","padding","color","title","fontFamily","sessionMenu","height","paperContainer","backgroundImage","image","backgroundSize","App","tvShows","Title","Images","Cast","Synopsis","episodes","Background","classes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,cAAc,EAAE;AACdC,IAAAA,eAAe,EAAE,oBADH;AAEdC,IAAAA,OAAO,EAAE,WAFK;AAGdC,IAAAA,KAAK,EAAE;AAHO,GADW;AAM3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP,GANoB;AAS3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE;AADG,GATc;AAY3BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,eAAe,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB,QAAOA,KAAM,IADhC;AAEdC,IAAAA,cAAc,EAAE,OAFF;AAGdJ,IAAAA,MAAM,EAAE;AAHM;AAZW,CAAD,CAA5B;AAmBA,eAAe,SAASK,GAAT,GAAe;AAAA;;AAC5B,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,KADL;AAEJC,IAAAA;AAFI,MAGFrB,OAAO,EAHX;AAKA,QAAMa,KAAK,GAAGK,MAAM,IAAIA,MAAM,CAACI,UAA/B;AAEA,QAAMC,OAAO,GAAGrB,SAAS,CAAC;AAAEW,IAAAA;AAAF,GAAD,CAAzB;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEU,OAAO,CAACZ,cAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,SAAS,EAAEY,OAAO,CAACpB,cAAtC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAEoB,OAAO,CAAChB,KAA5C;AAAA,sBACGU;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,SAAS,EAAEM,OAAO,CAACd,WAAtC;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,QAAQ,EAAEY;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE;AAAEF,cAAAA,IAAF;AAAQC,cAAAA;AAAR;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD;;GA9BuBL,G;UAIlBf,O,EAIYE,S;;;KARMa,G","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"./components/Footer\";\nimport SeasonsMenu from \"./components/SeasonsMenu\";\nimport useData from \"./utils/useData\";\nimport Icons from \"./components/Icons\";\n\nconst useStyles = makeStyles({\n  containerTitle: {\n    backgroundColor: \"rgba(50,50,50,0.7)\",\n    padding: \"10px 20px\",\n    color: \"#F5F5F5\",\n  },\n  title: {\n    fontFamily: \"Nunito\",\n  },\n  sessionMenu: {\n    height: \"600px\",\n  },\n  paperContainer: {\n    backgroundImage: ({ image }) => `url('${image}')`,\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n  },\n});\n\nexport default function App() {\n  const {\n    tvShows: { Title, Images, Cast, Synopsis },\n    episodes,\n  } = useData();\n\n  const image = Images && Images.Background;\n\n  const classes = useStyles({ image });\n\n  return (\n    <>\n      <Paper className={classes.paperContainer}>\n        <Grid container>\n          <Grid item xs={12} className={classes.containerTitle}>\n            <Typography variant=\"h2\" className={classes.title}>\n              {Title}\n            </Typography>\n            <Icons nameIcon=\"Subtitle\" />\n          </Grid>\n          <Grid item xs={12} className={classes.sessionMenu}>\n            <SeasonsMenu episodes={episodes} />\n          </Grid>\n          <Grid item xs={12}>\n            <Footer tvShows={{ Cast, Synopsis }} />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/workspace/agile_telecine/src/components/SeasonList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionActions';\nimport Icons from './Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: 'transparent'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: '#F5F5F5',\n    backgroundColor: 'transparent'\n  },\n  media: {\n    height: '200px'\n  },\n  accordionDetails: {\n    backgroundColor: 'transparent'\n  },\n  card: {\n    border: \"none\",\n    boxShadow: \"none\",\n    backgroundColor: 'transparent',\n    color: '#F5F5F5'\n  }\n});\nexport default function SeasonList(props) {\n  _s();\n\n  const {\n    data\n  } = props;\n  const [expanded, setExpanded] = useState(0);\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((item, key) => /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expanded === key,\n      onChange: handleChange(key),\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          \"aria-controls\": `panel${key}d-content`,\n          id: `panel${key}d-header`,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: `${item.EpisodeNumber} ${item.Title}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Icons, {\n          nameIcon: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        className: classes.accordionDetails,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            image: item.Image,\n            title: item.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: item.Synopsis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this))\n  }, void 0, false);\n}\n\n_s(SeasonList, \"nOO3+k11+4mBEXEt4YPAZ340emU=\", false, function () {\n  return [useStyles];\n});\n\n_c = SeasonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeasonList\");","map":{"version":3,"sources":["/Users/rafa/Documents/workspace/agile_telecine/src/components/SeasonList.jsx"],"names":["React","useState","makeStyles","Typography","Card","CardMedia","CardContent","Accordion","AccordionSummary","AccordionDetails","Icons","useStyles","root","backgroundColor","container","display","justifyContent","color","media","height","accordionDetails","card","border","boxShadow","SeasonList","props","data","expanded","setExpanded","handleChange","panel","event","newExpanded","classes","map","item","key","EpisodeNumber","Title","Image","Synopsis"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionActions';\nimport Icons from './Icons';\n\nconst useStyles = makeStyles({\n  root:{\n    backgroundColor: 'transparent',\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    color: '#F5F5F5',\n    backgroundColor: 'transparent',\n  },\n  media: {\n    height: '200px',\n  },\n  accordionDetails:{\n    backgroundColor: 'transparent',\n  },\n  card:{\n    border: \"none\",\n    boxShadow: \"none\",\n    backgroundColor: 'transparent',\n    color:'#F5F5F5',\n  },\n});\n\nexport default function SeasonList(props) {\n  const { data } = props;\n  \n  const [expanded, setExpanded] = useState(0);\n  \n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n  \n  const classes = useStyles();\n  \n  return (\n    <>\n    {data.map((item, key)=>(\n      <Accordion expanded={expanded === key}\n        key={key} \n        onChange={handleChange(key)}\n        className={classes.root}\n       >\n        <div className={classes.container}>\n          <AccordionSummary aria-controls={`panel${key}d-content`} id={`panel${key}d-header`}>\n            <Typography>{`${item.EpisodeNumber} ${item.Title}`}</Typography>\n          </AccordionSummary>\n          <Icons nameIcon=\"Play\" />\n        </div>\n        <AccordionDetails className={classes.accordionDetails}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.media}\n              image={item.Image}\n              title={item.Title}\n            />\n            <CardContent>\n              <Typography>\n                {item.Synopsis}\n              </Typography>\n            </CardContent>\n          </Card>\n        </AccordionDetails>\n      </Accordion>\n    ))} \n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}